user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    server_tokens   off;
    
    gzip  on;

    client_max_body_size 10g;

    proxy_request_buffering off;
    proxy_read_timeout    90;
    proxy_connect_timeout 90;
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=all:320m;

    proxy_temp_path /var/spool/nginx/proxy_temp 1 2;
    client_body_temp_path /var/spool/nginx/client_body_temp;
    fastcgi_temp_path /var/spool/nginx/fastcgi_temp 1 2;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    #upstreams
    {{ range lsdir "/backends"}}{{ $backend := . }}upstream {{ $backend }} {
        {{ $backend_settings := json (getv ($backend | printf "/backends/%s/backend")) }}
        {{ range ls ( $backend | printf "/backends/%s/servers" ) }}{{ $data := json (getv ( printf "/backends/%s/servers/%s" $backend . )) }}server {{ index (split $data.URL "://") 1 }} fail_timeout={{if $backend_settings.Settings.Timeouts.Read}}{{$backend_settings.Settings.Timeouts.Read}}{{else}}4s{{end}};
        {{ end }}
        server 127.0.0.1:65534 down;
        keepalive {{if $backend_settings.Settings.KeepAlive.MaxIdleConnsPerHost}}{{$backend_settings.Settings.KeepAlive.MaxIdleConnsPerHost}}{{else}}8{{end}};
    }
    {{ end }}

    {{ range lsdir "/frontends"}}{{ $frontend := printf "/frontends/%s/frontend" . }}{{ $data := json (getv $frontend) }}{{ $backend := $data.BackendId }}
    server {
        {{ range (split $data.Route "&&") }}{{ $res := split . "("}}
        {{ if or (contains (index $res 0) "HostRegexp") (contains (index $res 0) "Host") }}{{ $host := join (split (index (split . "`") 1) ".*") "" }}server_name {{ if eq (index $res 0) "HostRegexp" }}.{{ end }}{{ $host }} www.{{ $host }};
        {{if exists ($host | printf "/cert/%s/host") }}
        listen 443 ssl;

        ssl on;

        ssl_certificate           /etc/nginx/ssl/{{ $host }}.crt;
        ssl_certificate_key       /etc/nginx/ssl/{{ $host }}.key;
        #Nonce {{ $json := json (join (split (getv ($host | printf "/cert/%s/host")) "'") "\"") }}{{ $json.Nonce }}
        ssl_session_cache         shared:SSL:10m;
        ssl_session_timeout       5m;
        ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers kEECDH+AESGCM+AES128:kEECDH+AES128:kRSA+AESGCM+AES128:kRSA+AES128:!RC4:!aNULL:!eNULL:!MD5:!EXPORT:!LOW:!SEED:!CAMELLIA:!IDEA:!PSK:!SRP:!SSLv2;
        ssl_prefer_server_ciphers on;

        {{ else }}
        listen 80;
        {{ end }}
        location ~* "/(\.ht|\.svn|\.Sync|\.htaccess|\.git|\.ssh|\.subversion|\.azure|\.bash_history|\.restored)"
        {
            deny all;
            return 404;
        }
        {{ else if contains (index $res 0) "PathRegexp" }}location {{ range (split (index (split . "`") 1) ".*") }}{{ . }}{{ end }} {
              {{ range (split $data.Route "&&") }}{{ $tmp := split . "("}}
              {{ if contains (index $tmp 0) "RemoteAddr" }}allow {{ index (split . "`") 1 }};
              deny all;
              {{ end }}
              {{ end }}
              {{ $backend_settings := json (getv ($backend | printf "/backends/%s/backend")) }}{{if $backend_settings.Settings.KeepAlive.Period}}keepalive_timeout {{$backend_settings.Settings.KeepAlive.Period}};{{end}}
              proxy_pass            {{ $backend_settings.Type }}://{{ $backend }};
              proxy_redirect        off;
          
              proxy_set_header      Host {{if $backend_settings.Headers.Host}}{{$backend_settings.Headers.Host}}{{else}}$server_name:$server_port{{end}};
              proxy_set_header      X-Real-IP $remote_addr;
              proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
          
              proxy_http_version    1.1;
              proxy_set_header      Upgrade $http_upgrade;
              proxy_set_header      Connection $connection_upgrade;
        }
        {{ end }}
        {{ end }}
    }
    {{ end }}   

    server {
        listen                80 default;
        server_name           localhost;
        index                 index.html index.htm;
        access_log            off;

        location / {
            deny all;
            root      /var/www;
        }
    }    

    include /etc/nginx/conf.d/*.conf;
}